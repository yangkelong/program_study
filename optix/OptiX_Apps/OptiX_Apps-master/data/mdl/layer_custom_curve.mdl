mdl 1.7;
import ::df::*;
import ::anno::*;

export material layer_custom_curve(
  uniform float parLayerNormalReflectivity  = 0.0 [[anno::hard_range(0.0, 1.0)]],
  uniform float parLayerGrazingReflectivity = 1.0 [[anno::hard_range(0.0, 1.0)]],
  uniform float parLayerExponent            = 5.0,
  uniform float parLayerWeight              = 1.0 [[anno::hard_range(0.0, 1.0)]],
  uniform color parSpecularTint             = color(1.0, 1.0, 1.0),
  uniform color parDiffuseTint              = color(0.980392, 0.729412, 0.470588)
  // , uniform float parDiffuseRoughness         = 0.0
)
= 
material(
  surface: material_surface(
    scattering: df::custom_curve_layer(
      normal_reflectivity:  parLayerNormalReflectivity,
      grazing_reflectivity: parLayerGrazingReflectivity,
      exponent:             parLayerExponent,
      weight:               parLayerWeight,
      layer: df::specular_bsdf(
        tint: parSpecularTint,
        mode: df::scatter_reflect
      ),
      base: df::diffuse_reflection_bsdf(
        tint:      parDiffuseTint
        // , roughness: parDiffuseRoughness
      )
    )
  )
);
